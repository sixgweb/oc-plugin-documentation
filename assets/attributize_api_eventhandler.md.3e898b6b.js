import{_ as e,o as t,c as n,S as a}from"./chunks/framework.96f0a5e0.js";const f=JSON.parse('{"title":"Event Handler","description":"","frontmatter":{},"headers":[],"relativePath":"attributize/api/eventhandler.md","filePath":"attributize/api/eventhandler.md"}'),o={name:"attributize/api/eventhandler.md"},r=a('<h1 id="event-handler" tabindex="-1">Event Handler <a class="header-anchor" href="#event-handler" aria-label="Permalink to &quot;Event Handler&quot;">​</a></h1><p>Attributize integration Event Subscriber class. Extends AbstractEventHandler class. See <a href="/oc-plugin-documentation/attributize/integrations/build-your-own.html#event-handler">Build Your Own</a> for code sample.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="protected-function-gettitle-string" tabindex="-1">protected function getTitle(): string <a class="header-anchor" href="#protected-function-gettitle-string" aria-label="Permalink to &quot;protected function getTitle(): string&quot;">​</a></h3><p>Title used in backend navigation and field editor</p><h3 id="protected-function-getmodelclass-string" tabindex="-1">protected function getModelClass(): string <a class="header-anchor" href="#protected-function-getmodelclass-string" aria-label="Permalink to &quot;protected function getModelClass(): string&quot;">​</a></h3><p>Model class that stores the field data in the field_values column</p><h3 id="protected-function-getcomponentclass-string" tabindex="-1">protected function getComponentClass(): ?string <a class="header-anchor" href="#protected-function-getcomponentclass-string" aria-label="Permalink to &quot;protected function getComponentClass(): ?string&quot;">​</a></h3><p>Frontend component to inject Attributize Fields component into. Return null if no frontend editing required.</p><h3 id="protected-function-getcontrollerclass-string" tabindex="-1">protected function getControllerClass(): string <a class="header-anchor" href="#protected-function-getcontrollerclass-string" aria-label="Permalink to &quot;protected function getControllerClass(): string&quot;">​</a></h3><p>Controller class responsible for editing model class</p><h3 id="protected-function-getcomponentmodel-component-model" tabindex="-1">protected function getComponentModel($component): Model <a class="header-anchor" href="#protected-function-getcomponentmodel-component-model" aria-label="Permalink to &quot;protected function getComponentModel($component): Model&quot;">​</a></h3><p>Logic used to retrieve model via the frontend component.</p><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><p>Cms\\Classes\\ComponentBase $component</p><h3 id="protected-function-getbackendmenuparameters-array" tabindex="-1">protected function getBackendMenuParameters(): array <a class="header-anchor" href="#protected-function-getbackendmenuparameters-array" aria-label="Permalink to &quot;protected function getBackendMenuParameters(): array&quot;">​</a></h3><p>Existing backend plugin menu parameters. Used to insert new link to edit fields.</p>',17),i=[r];function c(s,d,l,p,u,h){return t(),n("div",null,i)}const g=e(o,[["render",c]]);export{f as __pageData,g as default};
