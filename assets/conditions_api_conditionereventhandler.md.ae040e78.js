import{_ as e,c as t,o as n,a as o}from"./app.00f17916.js";const f=JSON.parse('{"title":"Conditioner Event Handler","description":"","frontmatter":{},"headers":[{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"protected function getModelClass(): string","slug":"protected-function-getmodelclass-string","link":"#protected-function-getmodelclass-string","children":[]},{"level":3,"title":"protected function getModelOptions(): array","slug":"protected-function-getmodeloptions-array","link":"#protected-function-getmodeloptions-array","children":[]},{"level":3,"title":"protected function getControllerClass(): string","slug":"protected-function-getcontrollerclass-string","link":"#protected-function-getcontrollerclass-string","children":[]},{"level":3,"title":"protected function getConditionerCallback(): ?callable;","slug":"protected-function-getconditionercallback-callable","link":"#protected-function-getconditionercallback-callable","children":[]},{"level":3,"title":"protected function getFieldConfig(): array","slug":"protected-function-getfieldconfig-array","link":"#protected-function-getfieldconfig-array","children":[]},{"level":3,"title":"protected function getGroupName(): string","slug":"protected-function-getgroupname-string","link":"#protected-function-getgroupname-string","children":[]}]}],"relativePath":"conditions/api/conditionereventhandler.md"}'),r={name:"conditions/api/conditionereventhandler.md"},i=o('<h1 id="conditioner-event-handler" tabindex="-1">Conditioner Event Handler <a class="header-anchor" href="#conditioner-event-handler" aria-hidden="true">#</a></h1><p>Event Subscriber class for Conditioners. Extends AbstractConditionerEventHandler class. See <a href="/oc-plugin-documentation/conditions/integrations/build-your-own.html#conditionereventhandler">Build Your Own</a> for code sample.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-hidden="true">#</a></h2><h3 id="protected-function-getmodelclass-string" tabindex="-1">protected function getModelClass(): string <a class="header-anchor" href="#protected-function-getmodelclass-string" aria-hidden="true">#</a></h3><p>Return conditioner model class</p><h3 id="protected-function-getmodeloptions-array" tabindex="-1">protected function getModelOptions(): array <a class="header-anchor" href="#protected-function-getmodeloptions-array" aria-hidden="true">#</a></h3><p>Returns array of options used for in filter, import, and export dropdowns</p><h3 id="protected-function-getcontrollerclass-string" tabindex="-1">protected function getControllerClass(): string <a class="header-anchor" href="#protected-function-getcontrollerclass-string" aria-hidden="true">#</a></h3><p>Controller class responsible for editing model class</p><h3 id="protected-function-getconditionercallback-callable" tabindex="-1">protected function getConditionerCallback(): ?callable; <a class="header-anchor" href="#protected-function-getconditionercallback-callable" aria-hidden="true">#</a></h3><p>Opportunity to create custom logic for adding conditioners to the ConditionersManager. If null returned, conditioner is added during the <strong>model.afterFetch</strong> event</p><h3 id="protected-function-getfieldconfig-array" tabindex="-1">protected function getFieldConfig(): array <a class="header-anchor" href="#protected-function-getfieldconfig-array" aria-hidden="true">#</a></h3><p>Returns conditions field configuration</p><h3 id="protected-function-getgroupname-string" tabindex="-1">protected function getGroupName(): string <a class="header-anchor" href="#protected-function-getgroupname-string" aria-hidden="true">#</a></h3><p>Repeater group name used for the conditions repeater</p>',15),a=[i];function c(d,l,s,p,g,u){return n(),t("div",null,a)}const m=e(r,[["render",c]]);export{f as __pageData,m as default};
