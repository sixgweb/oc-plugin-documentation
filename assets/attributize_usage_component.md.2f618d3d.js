import{_ as e,c as s,o as a,a as n}from"./app.c97bb42d.js";const C=JSON.parse('{"title":"Fields Component","description":"","frontmatter":{},"headers":[{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"codes","slug":"codes","link":"#codes","children":[]},{"level":3,"title":"tabs","slug":"tabs","link":"#tabs","children":[]},{"level":3,"title":"useTabs","slug":"usetabs","link":"#usetabs","children":[]},{"level":3,"title":"floatingLabels","slug":"floatinglabels","link":"#floatinglabels","children":[]},{"level":3,"title":"previewMode","slug":"previewmode","link":"#previewmode","children":[]},{"level":3,"title":"fieldsContainerClass","slug":"fieldscontainerclass","link":"#fieldscontainerclass","children":[]}]}],"relativePath":"attributize/usage/component.md"}'),t={name:"attributize/usage/component.md"},l=n(`<h1 id="fields-component" tabindex="-1">Fields Component <a class="header-anchor" href="#fields-component" aria-hidden="true">#</a></h1><p>The <code>attributizeFields</code> component is automatically injected via the integration. For example, the <a href="/oc-plugin-documentation/attributizeusers/">RainLab User Integration</a> injects the Fields component into the Account component for registration and update.</p><p>End users need only ensure the component is added to the page or partial via the twig component tag</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-hidden="true">#</a></h2><h3 id="codes" tabindex="-1">codes <a class="header-anchor" href="#codes" aria-hidden="true">#</a></h3><p>Limit fields to specified code(s). Accepts comma separated or array value. Default: <code>[]</code></p><p><em>Note: Field codes can be found in field&#39;s <a href="/oc-plugin-documentation/attributize/usage/editor/tabs/settings.html">settings tab</a></em></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; tabs=&#39;first_name,last_name,city,state&#39; %}\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>OR</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% </span></span>
<span class="line"><span style="color:#A6ACCD;">    component &#39;attributizeFields&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    tabs=[&#39;first_name&#39;, &#39;last_name&#39;, &#39;city&#39;, &#39;state&#39;] </span></span>
<span class="line"><span style="color:#A6ACCD;">%}\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">Validation Notice</p><p>Fields not included in <code>codes</code> will not be validated.</p></div><h3 id="tabs" tabindex="-1">tabs <a class="header-anchor" href="#tabs" aria-hidden="true">#</a></h3><p>Limit fields to specified tab(s). Accepts comma separated or array value. Default: <code>[]</code></p><p><em>Note: Values must match tab names exactly. If you change tab names, you must change the value(s) as well.</em></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; tabs=&#39;Address,Contact Information&#39; %}\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>OR</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; tabs=[&#39;Address, &#39;Contact Information&#39;] %}\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><div class="danger custom-block"><p class="custom-block-title">Validation Notice</p><p>Fields not included in <code>tabs</code> will not be validated.</p></div><h3 id="usetabs" tabindex="-1">useTabs <a class="header-anchor" href="#usetabs" aria-hidden="true">#</a></h3><p>Use Bootstrap 5 tabbed interface for fields. Default: <code>true</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; useTabs=true %}\`</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="floatinglabels" tabindex="-1">floatingLabels <a class="header-anchor" href="#floatinglabels" aria-hidden="true">#</a></h3><p>Enable Bootstrap 5 floating labels on form fields. Takes precedence over <a href="/oc-plugin-documentation/attributize/settings.html#floating-labels">Settings</a>. Default: <code>false</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; floatingLabels=true %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="previewmode" tabindex="-1">previewMode <a class="header-anchor" href="#previewmode" aria-hidden="true">#</a></h3><p>Enable preview mode for the form fields, rending them readonly. Default: <code>false</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; previewMode=true %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h3 id="fieldscontainerclass" tabindex="-1">fieldsContainerClass <a class="header-anchor" href="#fieldscontainerclass" aria-hidden="true">#</a></h3><p>Container class used for fields container. Default: <code>row</code></p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; fieldsContainerClass=&#39;bg-light p-5&#39; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,31),o=[l];function i(c,p,d,r,u,h){return a(),s("div",null,o)}const m=e(t,[["render",i]]);export{C as __pageData,m as default};
