import{_ as e,c as t,o as n,a as o}from"./app.9b3a4baa.js";const h=JSON.parse('{"title":"Component","description":"","frontmatter":{},"headers":[],"relativePath":"attributize/usage/component.md"}'),a={name:"attributize/usage/component.md"},s=o(`<h1 id="component" tabindex="-1">Component <a class="header-anchor" href="#component" aria-hidden="true">#</a></h1><p>It is the responsibility of the integration plugin to inject the component into the corresponding frontend component. For example, the <a href="/oc-plugin-documentation/attributizeusers/">RainLab User Integration</a> injects the Fields component into the Account component for registration and update.</p><p>End users need only ensure the component is added to the page or partial via the twig component tag</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">{% component &#39;attributizeFields&#39; %}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div>`,4),i=[s];function p(c,r,d,l,_,m){return n(),t("div",null,i)}const g=e(a,[["render",p]]);export{h as __pageData,g as default};
