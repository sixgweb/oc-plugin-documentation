import{_ as e,v as t,b as o,R as n}from"./chunks/framework.f0c181fc.js";const g=JSON.parse('{"title":"Conditioner Event Handler","description":"","frontmatter":{},"headers":[],"relativePath":"conditions/api/conditionereventhandler.md","filePath":"conditions/api/conditionereventhandler.md"}'),r={name:"conditions/api/conditionereventhandler.md"},a=n('<h1 id="conditioner-event-handler" tabindex="-1">Conditioner Event Handler <a class="header-anchor" href="#conditioner-event-handler" aria-label="Permalink to &quot;Conditioner Event Handler&quot;">​</a></h1><p>Event Subscriber class for Conditioners. Extends AbstractConditionerEventHandler class. See <a href="/oc-plugin-documentation/conditions/integrations/build-your-own.html#conditionereventhandler">Build Your Own</a> for code sample.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="protected-function-getmodelclass-string" tabindex="-1">protected function getModelClass(): string <a class="header-anchor" href="#protected-function-getmodelclass-string" aria-label="Permalink to &quot;protected function getModelClass(): string&quot;">​</a></h3><p>Return conditioner model class</p><h3 id="protected-function-getmodeloptions-array" tabindex="-1">protected function getModelOptions(): array <a class="header-anchor" href="#protected-function-getmodeloptions-array" aria-label="Permalink to &quot;protected function getModelOptions(): array&quot;">​</a></h3><p>Returns array of options used for in filter, import, and export dropdowns</p><h3 id="protected-function-getcontrollerclass-string" tabindex="-1">protected function getControllerClass(): string <a class="header-anchor" href="#protected-function-getcontrollerclass-string" aria-label="Permalink to &quot;protected function getControllerClass(): string&quot;">​</a></h3><p>Controller class responsible for editing model class</p><h3 id="protected-function-getconditionercallback-callable" tabindex="-1">protected function getConditionerCallback(): ?callable; <a class="header-anchor" href="#protected-function-getconditionercallback-callable" aria-label="Permalink to &quot;protected function getConditionerCallback(): ?callable;&quot;">​</a></h3><p>Opportunity to create custom logic for adding conditioners to the ConditionersManager. If null returned, conditioner is added during the <strong>model.afterFetch</strong> event</p><h3 id="protected-function-getfieldconfig-array" tabindex="-1">protected function getFieldConfig(): array <a class="header-anchor" href="#protected-function-getfieldconfig-array" aria-label="Permalink to &quot;protected function getFieldConfig(): array&quot;">​</a></h3><p>Returns conditions field configuration</p><h3 id="protected-function-getgroupname-string" tabindex="-1">protected function getGroupName(): string <a class="header-anchor" href="#protected-function-getgroupname-string" aria-label="Permalink to &quot;protected function getGroupName(): string&quot;">​</a></h3><p>Repeater group name used for the conditions repeater</p>',15),i=[a];function d(c,l,s,p,u,h){return t(),o("div",null,i)}const m=e(r,[["render",d]]);export{g as __pageData,m as default};
